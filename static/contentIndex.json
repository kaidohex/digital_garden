{"Architecture":{"slug":"Architecture","filePath":"Architecture.md","title":"Architecture Wing","links":["Architecture/Introduction","Binary-Numbers"],"tags":[],"content":"🖥️ Architecture Wing – Core Systems Deck\nStatus: Online | Modules Active ✅\nCommand Deck: Critical Controls – Kepler Base 🪐\n\n📝 Deck Log\nCoordinates: X: 47.410° | Y: -122.872° | Z: 359.55 km\n“All systems stable. Core Systems Deck is fully operational. Atomic architecture modules deployed for CPU, memory, and low-level operations. Crew advised to reference each module for detailed flashcard notes.”\n\n⚡ Architecture Modules\n\nIntroduction\nBinary Numbers\n\n"},"Assembly":{"slug":"Assembly","filePath":"Assembly.md","title":"Assembly Dock","links":["Assembly/registers","Assembly/instructions","Assembly/memory","Assembly/io","Assembly/subroutines","Assembly/macros","Assembly/debugging"],"tags":[],"content":"🛠️ Assembly Dock – Low-Level Bay\nStatus: Online | Modules Active ✅\nCommand Deck: Engineering Bay – Kepler Base 🪐\n\n📝 Dock Log\nCoordinates: X: 47.395° | Y: -122.853° | Z: 358.88 km\n“All systems green. Assembler Dock is fully operational. Atomic assembly modules deployed across the bay. Core modules monitoring registers, instructions, and memory operations. Crew advised to consult each module for detailed flashcard reference.”\n\n⚡ Assembly Modules\n\nRegisters – general-purpose, special-purpose\nInstructions – arithmetic, logical, control flow\nMemory Operations – stack, heap, addressing modes\nO – input/output instructions, ports\nSubroutines – call, ret, parameter passing\nMacros &amp; Directives – assembly preprocessor, labels\nDebugging – breakpoints, step execution, flags\n\n"},"C":{"slug":"C","filePath":"C.md","title":"C Bay","links":["C/variables","C/data_types","C/control_flow","C/functions","C/pointers","C/arrays","C/memory_management","C/strings","C/file_io","C/structs"],"tags":[],"content":"✈️ C Bay – Jet Deck\nStatus: Online | Modules Active ✅\nCommand Deck: Engineering Bay – Kepler Base 🪐\n\n📝 Deck Log\nCoordinates: X: 47.389° | Y: -122.841° | Z: 358.55 km\n“All systems green. Jet Deck is fully operational. Atomic C modules deployed across the deck. Core modules monitoring memory and pointer operations. Crew advised to reference each module for detailed flashcard notes.”\n\n⚡ C Modules\n\nVariables – int, char, float, double\nData Types – sizeof(), type casting\nControl Flow – if-else, switch, for, while, do-while\nFunctions – declarations, definitions, return types\nPointers – *, &amp;, pointer arithmetic\nArrays – 1D and multi-dimensional arrays\nMemory Management – malloc(), calloc(), realloc(), free()\nStrings – C-style strings, null-termination \\0\nO – fopen(), fclose(), fprintf(), fscanf()\nStructs – custom data structures\n\n"},"CPP":{"slug":"CPP","filePath":"CPP.md","title":"CPP Bay","links":["C++/variables","C++/data_types","C++/control_flow","C++/functions","C++/pointers","C++/arrays","C++/memory_management","C++/classes","C++/inheritance","C++/templates"],"tags":[],"content":"🚀 CPP Bay – Rocket Deck\nStatus: Online | Modules Active ✅\nCommand Deck: Engineering Bay – Kepler Base 🪐\n\n📝 Deck Log\nCoordinates: X: 47.392° | Y: -122.849° | Z: 358.72 km\n“All systems green. Rocket Deck is fully operational. Atomic C++ modules deployed across the deck. Core modules monitoring object-oriented and advanced programming operations. Crew advised to consult each module for detailed flashcard notes.”\n\n⚡ C++ Modules\n\nVariables – int, char, float, double, bool\nData Types – sizeof(), type casting, auto\nControl Flow – if-else, switch, loops\nFunctions – declarations, definitions, return types, overloading\nPointers – *, &amp;, pointer arithmetic, smart pointers\nArrays &amp; Vectors – 1D, multi-dimensional, std::vector\nMemory Management – dynamic allocation, new, delete\nClasses &amp; Objects – constructors, destructors, methods\nInheritance – single, multiple, polymorphism\nTemplates – function and class templates\n\n"},"ML":{"slug":"ML","filePath":"ML.md","title":"ML Lab","links":["ML_AI/python_ml","ML_AI/neural_networks","ML_AI/deep_learning","ML_AI/computer_vision","ML_AI/nlp","ML_AI/rl"],"tags":[],"content":"🤖 ML Lab – Experimental Wing\nStatus: Online | Modules Active ✅\nCommand Deck: Research Modules – Kepler Base 🪐\n\n📝 Lab Log\nCoordinates: X: 47.415° | Y: -122.880° | Z: 359.88 km\n“All systems operational. ML Lab is fully functional. Atomic modules deployed for machine learning and AI. Crew advised to reference each module for experiment notes and flashcards.”\n\n⚡ ML Modules\n\nPython ML – NumPy, pandas, scikit-learn basics\nNeural Networks – perceptrons, backpropagation\nDeep Learning – Keras, TensorFlow modules\nComputer Vision – image recognition, OpenCV\nNLP – text processing, transformers\nReinforcement Learning – Q-learning, policy gradients\n\n"},"OS":{"slug":"OS","filePath":"OS.md","title":"OS Wing","links":["Operating_Systems/processes","Operating_Systems/memory_management","Operating_Systems/file_systems","Operating_Systems/synchronization","Operating_Systems/interprocess_communication","Operating_Systems/interrupts"],"tags":[],"content":"⚙️ OS Wing – Kernel Deck\nStatus: Online | Modules Active ✅\nCommand Deck: Critical Controls – Kepler Base 🪐\n\n📝 Deck Log\nCoordinates: X: 47.412° | Y: -122.875° | Z: 359.70 km\n“Kernel Deck online. Process schedulers humming. Memory managers active. System calls ready for dispatch. Reference modules for tactical OS operations.”\n\n⚡ OS Modules\n\nProcesses – creation, scheduling, context switching\nMemory Management – paging, segmentation, virtual memory\nFile Systems – FAT, NTFS, ext4, I/O handling\nSynchronization – semaphores, mutexes, deadlocks\nIPC – pipes, sockets, shared memory\nInterrupts &amp; Exceptions – handling, vectors, priorities\n\n"},"index":{"slug":"index","filePath":"index.md","title":"Kepler Base","links":["C","CPP","Assembly","ML","Physics","Networking","Compiler_Design","readme"],"tags":[],"content":"🪐 Kepler Base – Command Deck\nWelcome to Kepler Base, your orbital hub for all technical modules and research wings.\nAll systems are monitored for stability, and experimental operations are logged in real-time.\n\n📝 Command Log\nOrbital Coordinates: X: 47.382° | Y: -122.845° | Z: 358.21 km\n\n“All systems nominal. Core Modules stable. Engineering Bay decks are monitoring programming operations. Research wings are preparing new experiments. Deactivated modules remain offline. Kepler Base continues orbiting Orion Loop with full mission readiness.”\n\nStatus: Online | Modules Active ✅\nCommand Deck: Mission Control\n\n⚡ Core Modules Overview\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModuleLocationStatusDescriptionArchitecture Wing 🖥️Core Modules✅ OnlineCPU, memory, low-level operationsOS Wing ⚙️Core Modules✅ OnlineProcess management, scheduling, system callsC Bay 💻Engineering✅ OnlineCore C programming modulesCPP Bay 🚀Engineering✅ OnlineAdvanced C++ modulesAssembly Dock 🛠️Engineering⚠️ PartialLow-level assembly operationsML Lab 🤖Research⚠️ PartialMachine learning &amp; AIPhysics Observation Deck 🌌Research⚠️ PartialSimulations and physics experimentsNetwork Dock 🔧Deactivated❌ OfflineUnder constructionCompiler Bay 🛠️Deactivated❌ OfflineMaintenance in progress\n\n🛠️ Engineering Bay\nMaintenance and programming operations\n\nC Bay – core C programming modules 💻 ✅\nCPP Bay – advanced C++ modules 🚀 ✅\nAssembly Dock – low-level assembly operations 🛠️ ⚠️\n\n\n🔬 Research Modules\nExperimental and research wings\n\nML Lab – machine learning &amp; AI 🤖 ⚠️\nPhysics Observation Deck – simulations and physics coding 🌌 ⚠️\n\n\n⚠️ Deactivated / Under Repair\nModules offline – future expansion\n\nNetwork Dock – under construction 🔧 ❌\nCompiler Bay – maintenance in progress 🛠️ ❌\n\n\n💡 Quick Tip\nMap - Guide map to explore"},"readme":{"slug":"readme","filePath":"readme.md","title":"Guide Map","links":["Kepler-Base"],"tags":[],"content":"🛰️ Main Dashboard\nKepler Base 🪐 serves as the central hub\n\nCore Modules (Critical Controls): Architecture Wing, OS Wing\nEngineering Bay: C Bay, CPP Bay, Assembly Dock\nResearch Modules: ML Lab, Physics Observation Deck\nDeactivated / Under Repair: Networking Dock, Compiler Bay\n\nEach wing or deck links to atomic notes for detailed flashcards or reference.\n\n⚡ Module Dashboards\nEvery module has its own dashboard with coordinates, deck logs, and atomic module links:\n\nC.md – Jet Deck 💻\nC++.md – Rocket Deck 🚀\nAssembly.md – Assembly Dock 🛠️\nArchitecture.md – Architecture Wing 🖥️\nOperating_Systems.md – Kernel Deck ⚙️\nML_AI.md – ML Lab 🤖\nPhysics.md – Physics Observation Deck 🌌\n\n\n💡 Usage\n\nOpen the vault in Obsidian.\nNavigate using the graph view or the main dashboard (kepler_base.md).\nEach module contains atomic notes (flashcards or short references) for efficient learning.\nUse the aliases / emojis to easily identify decks in graph view.\n\n\n🔧 Notes\n\n.obsidian folder is partially synced; plugin configurations may need local setup.\nNew modules or future expansions can be added under the Research Modules or Deactivated Wings sections.\nCommit messages follow the Kepler Base orbital log style for immersive version history.\n\n\n🚀 Quick Start\n\nOpen kepler_base.md to view the full station layout.\nClick on any deck or wing to explore its atomic modules.\nUse the graph view for visual navigation across all learning paths.\n\n\nMission Control – Kepler Base 🪐"}}